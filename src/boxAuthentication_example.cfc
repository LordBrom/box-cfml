//  Rename this file to "boxAuthentication.cfc" before use.
/**
 * Box application credentials; [Rename this file to ""boxAuthentication"" before use]
 */
component output="false" hint="Box application credentials; [Rename this file to ""boxAuthentication"" before use]" {

	public string function getEnterpriseID() output=false {
		return "00000000";
	}
	/*
		The private key provided by Box will need to be encrypted to a RSA private token.
		Save the key in its own file and run the following command using OpenSSL, and use the key in the resulting file.
			openssl rsa -in <file path> -out <file path>
		You will be prompted for the phasephrase provided with the private key.
	*/
	public string function getPrivateKey() output=false {
		return "-----BEGIN RSA PRIVATE KEY-----#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"00000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"-----END RSA PRIVATE KEY-----#chr(10)#";
	}

	public string function getPublicKey() output=false {
		return "-----BEGIN PUBLIC KEY-----#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"0000000000000000000000000000000000000000000000000000000000000000#chr(10)#" &
			"00000000#chr(10)#" &
			"-----END PUBLIC KEY-----#chr(10)#";
	}

	public string function getKeyID() output=false {
		return "00000000";
	}

	public string function getClientID() output=false {
		return "00000000000000000000000000000000";
	}

	public string function getClientSecret() output=false {
		return "00000000000000000000000000000000";
	}

	public string function getDefaultUserID() output=false {
		return "0000000000";
	}

}
